# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term urxvtc

#Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Droid Sans 11

# Load xresources for coloring
exec xrdb -load ~/.Xresources

## Base16 Gruvbox dark, medium
# Author: Dawid Kurek (dawikur@gmail.com), morhetz (https://github.com/morhetz/gruvbox)
#
# You can use these variables anywhere in the i3 configuration file.

set $base00 #282828
set $base01 #3c3836
set $base02 #504945
set $base03 #665c54
set $base04 #bdae93
set $base05 #d5c4a1
set $base06 #ebdbb2
set $base07 #fbf1c7
set $base08 #fb4934
set $base09 #fe8019
set $base0A #fabd2f
set $base0B #b8bb26
set $base0C #8ec07c
set $base0D #83a598
set $base0E #d3869b
set $base0F #d65d0e

# Setup of colors
set $darkblack      $base00
set $black          $base03
set $darkred        $base08
set $red            $base09
set $darkgreen      $base0B
set $green          $base01
set $darkyellow     $base0A
set $yellow         $base02
set $darkblue       $base0D
set $blue           $base04
set $darkmagenta    $base0E
set $magenta        $base06
set $darkcyan       $base0C
set $cyan           $base0F
set $darkwhite      $base05
set $white          $base07
set $transparent  #00000000

# Your preferred application launcher
# Note: it's recommended that you pass the final command to sway
# set $menu dmenu_path | dmenu -b -i -nb "$darkblack" -nf "$darkwhite" -sb "$darkwhite" -sf "$darkblack" -fn "Droid Sans-11" | xargs swaymsg exec
set $menu dmenu_path | bemenu-run -b -i -nb "$darkblack" -nf "$darkwhite" -sb "$darkwhite" -sf "$darkblack" -fn "Droid Sans-11" | xargs swaymsg exec

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output LVDS-1 {
    background ~/.wallpaper.jpg fill
    resolution 1366x768
}
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle \
    timeout 600 '$HOME/.local/bin/lockscreen' \
    timeout 900 'swaymsg "output * dpms off"' \
    resume 'swaymsg "output * dpms on"' \
    before-sleep '$HOME/.local/bin/lockscreen'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
 input "2:14:ETPS/2_Elantech_Touchpad" {
     click_method clickfinger
     scroll_method two_finger
     middle_emulation enabled
     tap_button_map lrm
     tap enabled
     natural_scroll enabled
     dwt enabled
 }

#  input "1:1:AT_Translated_Set_2_keyboard" {
 input * {
      xkb_layout es
      xkb_variant icyd
      xkb_options "lv3:ralt_switch,compose:102,caps:swapescape"
      }
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#

# start a terminal
    bindsym $mod+Return exec $term

    # kill focused window
    bindsym $mod+Shift+q kill

    # start your launcher
    bindsym $mod+d exec rofi -show run
    bindsym $mod+Shift+d exec bemenu-run -b -i

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # reload the configuration file
    bindsym $mod+Shift+c reload

    # exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # _move_ the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
# Define names for default workspaces for which we configure key bindings later on.
    # We use variables to avoid repeating the names in multiple places.
    set $ws1 "1: "
    set $ws2 "2: "
    set $ws3 "3: "
    set $ws4 "4: "
    set $ws5 "5"
    set $ws6 "6"
    set $ws7 "7"
    set $ws8 "8: "
    set $ws9 "9: ♪"
    set $ws10 "10: "

    # switch to workspace
    bindsym $mod+ampersand workspace $ws1
    bindsym $mod+bracketleft workspace $ws2
    bindsym $mod+braceleft workspace $ws3
    bindsym $mod+braceright workspace $ws4
    bindsym $mod+parenleft workspace $ws5
    bindsym $mod+equal workspace $ws6
    bindsym $mod+asterisk workspace $ws7
    bindsym $mod+parenright workspace $ws8
    bindsym $mod+plus workspace $ws9
    bindsym $mod+bracketright workspace $ws10
    # bindsym $mod+1 workspace $ws1
    # bindsym $mod+2 workspace $ws2
    # bindsym $mod+3 workspace $ws3
    # bindsym $mod+4 workspace $ws4
    # # bindsym $mod+ workspace $ws5
    # # bindsym $mod+ workspace $ws6
    # bindsym $mod+7 workspace $ws7
    # bindsym $mod+8 workspace $ws8
    # bindsym $mod+9 workspace $ws9
    # # bindsym $mod+ workspace $ws10
    #
    bindsym $mod+backslash  workspace back_and_forth

    # move focused container to workspace
    bindsym $mod+Shift+ampersand move container to workspace $ws1
    bindsym $mod+Shift+bracketleft move container to workspace $ws2
    bindsym $mod+Shift+braceleft move container to workspace $ws3
    bindsym $mod+Shift+braceright move container to workspace $ws4
    bindsym $mod+Shift+parenleft move container to workspace $ws5
    bindsym $mod+Shift+equal move container to workspace $ws6
    bindsym $mod+Shift+asterisk move container to workspace $ws7
    bindsym $mod+Shift+parenright move container to workspace $ws8
    bindsym $mod+Shift+plus move container to workspace $ws9
    bindsym $mod+Shift+bracketright move container to workspace $ws10

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # move focus to the parent container
    bindsym $mod+a focus parent
    bindsym $mod+Shift+a focus child
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Gaps:
#
    # Thin borders
    #hide_edge_borders both
    # i3 gaps
    #for_window [class="^.*"] border pixel 1
    gaps inner 6
    gaps outer 1
    #smart_gaps on
    default_border pixel
#                               Title_border    Background  Text    Indicator   Child_border
client.focused              $transparent    $darkwhite   $darkblack  $darkwhite    $darkwhite
    client.unfocused            $transparent    $darkblack   $darkwhite  $red   $darkblack
    client.focused_inactive     $transparent    $darkblack   $darkwhite  $red   $transparent
    client.urgent               $darkred        $darkred    $darkwhite  $darkred    $darkred
#
# Windows assign
#
    assign [class="(?i)urxvt" title="Nvim Server"] $ws1
    assign [app_id="qutebrowser"] $ws2
    assign [class="(?i)falkon"] $ws3
    assign [class="(?i)chromium"] $ws3
    assign [class="(?i)urxvt" title="ranger"] $ws4
    assign [class="(?i)urxvt" title="vifm"] $ws4
    assign [class="(?i)urxvt" title="ncmpcpp"] $ws9
    assign [class="(?i)urxvt" title="neomutt"] $ws10

#
# RpCalc in scratchpad
#
    for_window [class="(?i)urxvt" title="RPNCalc"] floating enable
    for_window [class="(?i)urxvt" title="RPNCalc"] resize set 600 300
    for_window [class="(?i)urxvt" title="RPNCalc"] move scratchpad
    bindsym $mod+F7 [class="(?i)urxvt" title="RPNCalc"] scratchpad show


# Dropdown terminal
    for_window [class="(?i)urxvt" title="Dropdown"] floating enable
    for_window [class="(?i)urxvt" title="Dropdown"] resize set 800 400
    for_window [class="(?i)urxvt" title="Dropdown"] move scratchpad
    bindsym $mod+t [class="(?i)urxvt" title="Dropdown"] scratchpad show

#
# Binding
#
    bindsym XF86AudioRaiseVolume exec pactl set-sink-volume $(pacmd list-sinks |awk '/* index:/{print $3}') +5%  && pkill -RTMIN+1 i3blocks
     bindsym XF86AudioLowerVolume exec pactl set-sink-volume $(pacmd list-sinks |awk '/* index:/{print $3}') -5%  && pkill -RTMIN+1 i3blocks
     bindsym XF86AudioMute exec pactl set-sink-mute $(pacmd list-sinks |awk '/* index:/{print $3}') toggle  && pkill -RTMIN+1 i3blocks
     bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
     bindsym XF86MonBrightnessUp exec brightnessctl set +5%
    # bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5% && pkill -RTMIN+1 i3blocks
    # bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5% && pkill -RTMIN+1 i3blocks
    # bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle && pkill -RTMIN+1 i3blocks
    bindsym Print exec grim -o LVDS-1 /tmp/screenshot.png
    bindsym $mod+m exec $term -e "neomutt"
    # bindsym $mod+Shift+m exec $term -e "neomutt -R"
    bindsym $mod+Shift+r exec $term -e "ncmpcpp"
    # bindsym $mod+Shift+f exec $term -e "ranger"
    bindsym $mod+Shift+f exec $term -e "vifm"
    bindsym $mod+Shift+w exec "qutebrowser"
    bindsym $mod+x exec $term -title "Nvim Server" -e nvim
    # bindsym $mod+Shift+p exec echo -e "Lock\nSuspend\nReboot\nShutdown" | dmenu -p "Power Option" -b -i -nb "$darkblack" -nf "$darkwhite" -sb "$darkwhite" -sf "$darkblack" -fn "Droid Sans-11" | awk '{print $1}' | tr -d '\r\n' | /usr/local/bin/rofi-power | xargs swaymsg exec
    bindsym $mod+Shift+p exec echo -e "Lock\nSuspend\nReboot\nShutdown" | rofi -dmenu -i -p "Power Options"| awk '{print $1}' | tr -d '\r\n' | $HOME/.local/bin/rofi-power | xargs swaymsg exec
    bindsym $mod+F11 exec $HOME/.local/bin/qrgen
    bindsym $mod+F10 exec $HOME/.local/bin/browsersearch
    bindsym $mod+F9 exec $HOME/.local/bin/zuluopen
    bindsym $mod+Shift+F9 exec $HOME/.local/bin/udevilunmount
    bindsym $mod+F8 exec $HOME/.local/bin/rofi_fa_ico_finder
    bindsym $mod+Shift+F7 exec $term -title "RPNCalc" -e zsh -c rpncalc
    bindsym $mod+Shift+F6 exec $term -title "Dropdown"

#
# Autostart:
#
exec urxvtd -q -o -f
exec mako
exec /home/beto/.local/bin/devmon_notify

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    font pango:Droid Sans, FontAwesome 11
    # status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
    status_command i3blocks
    pango_markup enabled
    mode dock
    # mode hide
    # modifier none
    position top
    colors {
        background $darkblack
        separator  $transparent
        statusline $white

        # State             Border      BG          Text
        focused_workspace   $darkwhite  $darkwhite   $darkblack
        active_workspace    $darkblack  $darkblack   $black
        inactive_workspace  $darkblack  $darkblack   $darkwhite
        urgent_workspace    $darkred    $darkred    $darkblack
        binding_mode        $darkred    $darkred    $darkblack
    }
    # position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done

    # colors {
        # statusline #ffffff
        # background #323232
        # inactive_workspace #32323200 #32323200 #5c5c5c
    # }
}

# include /etc/sway/config.d/*
