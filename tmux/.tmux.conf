set-environment -g TMUX_PLUGIN_MANAGER_PATH $XDG_CONFIG_HOME/tmux/plugins/

base00="#1d2021" # ----
base01="#3c3836" # ---
base02="#504945" # --
base03="#665c54" # -
base04="#bdae93" # +
base05="#d5c4a1" # ++
base06="#ebdbb2" # +++
base07="#fbf1c7" # ++++
base08="#fb4934" # red
base09="#fe8019" # orange
base0A="#fabd2f" # yellow
base0B="#b8bb26" # green
base0C="#8ec07c" # aqua/cyan
base0D="#83a598" # blue
base0E="#d3869b" # purple
base0F="#d65d0e" # brown

color_dark="$base01"
color_light="$base05"
color_session_text="$base0C"
color_status_text="$base0D"
color_main="$base0D"
color_secondary="$base0E"
color_level_ok="$base0B"
color_level_warn="$base09"
color_level_stress="$base08"
color_status_text_off="$base05"
color_window_off_indicator="$base06"
color_window_off_status_bg="$base03"
color_window_off_status_current_bg="$base04"

set -g status on
set -g status-interval 5
set -g status-position top
set -g status-justify left
set -g status-right-length 100

set -g mode-style "fg=$color_dark,bold,bg=$color_level_stress"
set -g status-style "fg=$color_main,bg=$color_dark"
set -g message-style "fg=$color_dark,bold,bg=$color_level_warn"
setw -g window-status-format " #I:#W "
setw -g window-status-style "fg=$color_main"
setw -g window-status-activity-style "fg=$color_level_warn"
setw -g pane-active-border-style "fg=$color_light"
setw -g pane-border-style "fg=$color_level_warn"
setw -g window-status-current-style "fg=$color_dark,bold,bg=$color_main"
set -g window-status-separator ""
separator_powerline_left=""
separator_powerline_right=""
setw -g window-status-current-format "#[fg=$color_dark,bg=$color_main]$separator_powerline_right#[default] #I:#W# #[fg=$color_main,bg=$color_dark]$separator_powerline_right#[default]"

# set -g status-justify centre # center align window list
# set -g status-left-length 20
# set -g status-right-length 140
# set -g status-left '#[fg=green]#H#[fg=white] • #[fg=yellow]#(whoami)#[default]'
# if-shell '[ $(uname -s) = "Darwin" ]' \
#    "set -g status-right '#[fg=green,bg=default]#($TMUX_PLUGIN_MANAGER_PATH/tmux-mem-cpu-load/tmux-mem-cpu-load --mem-mode 2 --cpu-mode 0 --averages-count 0 --interval 2) #[fg=black]• #[fg=red,dim,bg=default]#(guptime |cut -f6 -d\" \" |cut -f1 -d,) #[fg=black]• #[fg=white,bg=default]%a %H:%M#[default] #[fg=blue]%Y-%m-%d'" \
#    "set -g status-right '#[fg=green,bg=default]#($TMUX_PLUGIN_MANAGER_PATH/tmux-mem-cpu-load/tmux-mem-cpu-load --mem-mode 2 --cpu-mode 0 --averages-count 0 --interval 2)#[fg=white] • #[fg=yellow,bg=default]#(uptime |perl -pe \"s/.*up\\s+([^,]*).*/up \\1/\")#[fg=white] • #[fg=white,bg=default]%a %H:%M#[default] #[fg=blue]%Y-%m-%d'"

# Set parent terminal title to reflect current window in tmux session
set -g set-titles on
set -g set-titles-string "#I:#W"

# Status bar on top

# C-b is not acceptable -- Vim uses it
unbind C-b
set-option -g prefix C-a
# bind-key C-a last-window
# bind-key \# last-pane

# Start numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows auto
set -g renumber-windows on

# Escape time
set-option -sg escape-time 0

# than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

set-option -g history-limit 100000

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# hjkl pane traversal
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# auto window rename
set-window-option -g automatic-rename

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# enable truecolor support
set-option -g default-terminal "screen-256color"
set-option -sa terminal-overrides ',alacritty:RGB'
set-option -sa terminal-overrides ',alacritty:Tc'
set-option -g default-shell /bin/zsh
set-option -g focus-events on

# border colours
# set -g pane-border-style fg=white
# set -g pane-active-border-style "bg=default fg=blue"

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-selection-and-cancel
set -g set-clipboard on

# rm mouse mode fail
set -g mouse on

bind-key -n C-l send-keys C-l

# fix pane_current_path on new window and splits
unbind c; bind c new-window -c "#{pane_current_path}"
unbind '"'; bind '-' split-window -v -c '#{pane_current_path}'
unbind v
unbind '%'; bind \\ split-window -h -c '#{pane_current_path}'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | \
    grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?|ssh|mosh?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
bind-key -T copy-mode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-j select-pane -D
bind-key -T copy-mode-vi M-k select-pane -U
bind-key -T copy-mode-vi M-l select-pane -R

# switch windows alt+number
bind-key -n M-& select-window -t 1
bind-key -n M-[ select-window -t 2
bind-key -n M-\{ select-window -t 3
bind-key -n M-( select-window -t 4
bind-key -n M-+ select-window -t 5
bind-key -n M-= select-window -t 6
bind-key -n M-* select-window -t 7
bind-key -n M-) select-window -t 8
bind-key -n M-\} select-window -t 9

# sync panes
bind-key e setw synchronize-panes on
bind-key E setw synchronize-panes off

# Session is considered to be remote when we ssh into host
if-shell 'test -n "$SSH_CLIENT"' \
    'source-file $XDG_CONFIG_HOME/tmux/tmux.remote.conf'

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237

# Also, change some visual styles when window keys are off
bind -T root F12  \
    set prefix None \;\
    set key-table off \;\
    set status-style "fg=$color_status_text_off,bg=$color_window_off_status_bg" \;\
    setw -g window-status-style "fg=$color_status_text_off" \;\
    set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
    set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S

# tmux resurrect & continuum config
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-nvim 'session'
set -g @continuum-restore 'off'
set -g @continuum-boot-options 'alacritty,fullscreen'

# tmux-pass configuration
set -g @gopass-filter-program 'fzf'
set -g @gopass-vertical-split-pane-key 'b'
set -g @gopass-pane-percentage 20

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'haru-ake/tmux-gopass'
set -g @plugin 'wfxr/tmux-fzf-url'

run $XDG_CONFIG_HOME/tmux/plugins/tpm/tpm
