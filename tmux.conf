set-environment -g TMUX_PLUGIN_MANAGER_PATH $XDG_CONFIG_HOME/tmux/plugins/

set -g status-interval 2
set -g status-justify centre # center align window list
set -g status-left-length 20
set -g status-right-length 140
set -g status-left '#[fg=green]#H#[fg=white] • #[fg=yellow]#(uname -r | cut -c 1-6)#[default]'
if-shell '[ $(uname -s) = "Darwin" ]' \
   "set -g status-right '#[fg=green,bg=default]#(tmux-mem-cpu-load --mem-mode 2 --cpu-mode 0 --averages-count 0 --interval 2) #[fg=black]• #[fg=red,dim,bg=default]#(guptime |cut -f6 -d\" \" |cut -f1 -d,) #[fg=black]• #[fg=white,bg=default]%a %H:%M#[default] #[fg=blue]%Y-%m-%d'" \
   "set -g status-right '#[fg=green,bg=default]#(tmux-mem-cpu-load --mem-mode 0 --cpu-mode 1 --averages-count 2 --interval 2)#[fg=white] • #[fg=yellow,bg=default]#(uptime |perl -pe \"s/.*up\\s+([^,]*).*/up \\1/\")#[fg=white] • #[fg=white,bg=default]%a %H:%M#[default] #[fg=blue]%Y-%m-%d'"

set -g status-style 'bg=#1E272C,fg=#6A7D89'
set -g window-status-current-style 'fg=cyan'
set -g mode-style 'bg=cyan,fg=black'
set -g message-style 'bg=black,fg=cyan'
set -g pane-border-style 'bg=black,fg=#1E272C'
set -g pane-active-border-style 'bg=black,fg=#1E272C'

# Status bar on top
set-option -g status-position top

# C-b is not acceptable -- Vim uses it
unbind C-b
set-option -g prefix C-a
# bind-key C-a last-window
# bind-key \# last-pane

# Start numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows auto
set -g renumber-windows on

# Escape time
set-option -sg escape-time 0

# than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

set-option -g history-limit 100000

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# auto window rename
set-window-option -g automatic-rename

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# enable truecolor support
set-option -g default-terminal "tmux-256color"
set-option -sa terminal-overrides ',xterm-256color:RGB'

# border colours
set -g pane-border-style fg=white
set -g pane-active-border-style "bg=default fg=blue"

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-selection-and-cancel

# rm mouse mode fail
set -g mouse on

# fix pane_current_path on new window and splits
unbind c; bind c new-window -c "#{pane_current_path}"
unbind '"'; bind '-' split-window -v -c '#{pane_current_path}'
unbind v
unbind '%'; bind \\ split-window -h -c '#{pane_current_path}'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
bind-key -n M-\\ if-shell "$is_vim" "send-keys M-\\" "select-pane -l"
bind-key -T copy-mode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-j select-pane -D
bind-key -T copy-mode-vi M-k select-pane -U
bind-key -T copy-mode-vi M-l select-pane -R
bind-key -T copy-mode-vi M-\\ select-pane -l

# switch windows alt+number
bind-key -n M-& select-window -t 1
bind-key -n M-[ select-window -t 2
bind-key -n M-\{ select-window -t 3
bind-key -n M-( select-window -t 4
bind-key -n M-+ select-window -t 5
bind-key -n M-= select-window -t 6
bind-key -n M-* select-window -t 7
bind-key -n M-) select-window -t 8
bind-key -n M-\} select-window -t 9

# tmux resurrect & continuum config
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-nvim 'session'
set -g @continuum-restore 'on'

# tmux-pass configuration
set -g @gopass-filter-program 'sk'
set -g @gopass-vertical-split-pane-key 'b'
set -g @gopass-pane-percentage 20

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'haru-ake/tmux-gopass'

run $XDG_CONFIG_HOME/tmux/plugins/tpm/tpm
